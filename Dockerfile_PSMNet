#FROM ubuntu:latest
#FROM ubuntu:20.04
#MAINTAINER Ewelina Rupnik <ewelina.rupnik@ign.fr>

# CUDA refer to https://gitlab.com/nvidia/container-images/cuda/blob/master/doc/supported-tags.md
FROM ubuntu:20.04

ARG DEBIAN_FRONTEND=noninteractive

# Set the working directory
ENV foo /etc/opt/
WORKDIR ${foo}   

#MicMac dependencies
RUN apt-get update && apt-get install -y \
		    build-essential \
		    make \
                    cmake \ 
                    git \
		    python3-pip \
                    proj-bin \
		    exiv2 \
                    exiftool \
                    imagemagick \
		    libboost-all-dev \
		    xorg \
            	    openbox \
                    qt5-default \
                    meshlab \
                    vim \
		    wget
			


# Use the English version of MicMac from the current directory
ADD ./ ${foo}/micmac

#MicMac build & compile
WORKDIR micmac
RUN mkdir build
WORKDIR build
RUN cmake ../ && make install -j8

#build PSMNet
WORKDIR ${foo}
RUN cd micmac/MMVII/bin && \
    make && \
    cd .. && \ 
    cd src/DenseMatch && \
    /bin/bash install.sh

# Install Claude Code and additional tools
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gnupg \
    software-properties-common && \
    curl -fsSL https://claude.ai/install.sh | bash || \
    echo "⚠️ Claude Code installation failed, but continuing build..."

# Add Claude Code to PATH if it was installed successfully
RUN if [ -f "/usr/local/bin/claude" ]; then \
        echo "✅ Claude Code installed successfully"; \
        ln -sf /usr/local/bin/claude /usr/bin/claude; \
    elif [ -f "$HOME/.local/bin/claude" ]; then \
        echo "✅ Claude Code installed in user directory"; \
        ln -sf $HOME/.local/bin/claude /usr/bin/claude; \
    else \
        echo "⚠️ Claude Code not found in expected locations"; \
    fi

#MicMac add environmental variable to executables
ENV PATH=${foo}micmac/bin:${foo}micmac/MMVII/bin:/usr/local/bin:${PATH}
RUN echo "PATH set to: ${foo}micmac/bin:${foo}micmac/MMVII/bin:/usr/local/bin:${PATH}"

# Create a startup script for the container
RUN echo '#!/bin/bash\n\
echo "🐳 MicMac English Fork Container Ready!"\n\
echo "📁 MicMac binaries: ${foo}micmac/bin"\n\
echo "📁 MMVII binaries: ${foo}micmac/MMVII/bin"\n\
if command -v claude >/dev/null 2>&1; then\n\
    echo "✅ Claude Code available: $(which claude)"\n\
else\n\
    echo "❌ Claude Code not available"\n\
fi\n\
echo "💡 Available MicMac commands: mm3d, MMVII_TestCpp, etc."\n\
echo "💡 Type '\''mm3d -help'\'' to get started with MicMac"\n\
/bin/bash\n' > /usr/local/bin/container-start.sh

RUN chmod +x /usr/local/bin/container-start.sh

# Set default command
CMD ["/usr/local/bin/container-start.sh"]
